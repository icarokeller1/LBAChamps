// <auto-generated />
using System;
using LBAChamps.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LBAChamps.Migrations
{
    [DbContext(typeof(LigaContext))]
    [Migration("20250612033259_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LBAChamps.Models.EstatisticasPartida", b =>
                {
                    b.Property<int>("IdEstatistica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstatistica"));

                    b.Property<int>("Assistencias")
                        .HasColumnType("int");

                    b.Property<int>("Faltas")
                        .HasColumnType("int");

                    b.Property<int>("IdJogador")
                        .HasColumnType("int");

                    b.Property<int>("IdPartida")
                        .HasColumnType("int");

                    b.Property<int>("Pontos")
                        .HasColumnType("int");

                    b.Property<int>("Rebotes")
                        .HasColumnType("int");

                    b.Property<int>("RoubosBola")
                        .HasColumnType("int");

                    b.Property<int>("Tocos")
                        .HasColumnType("int");

                    b.HasKey("IdEstatistica");

                    b.HasIndex("IdJogador");

                    b.HasIndex("IdPartida", "IdJogador")
                        .IsUnique();

                    b.ToTable("EstatisticasPartidas");
                });

            modelBuilder.Entity("LBAChamps.Models.Jogador", b =>
                {
                    b.Property<int>("IdJogador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdJogador"));

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<int>("IdTime")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("NumeroCamisa")
                        .HasColumnType("int");

                    b.Property<string>("Posicao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdJogador");

                    b.HasIndex("IdTime");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("LBAChamps.Models.Liga", b =>
                {
                    b.Property<int>("IdLiga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLiga"));

                    b.Property<DateOnly?>("DataFim")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataInicio")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Esporte")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdLiga");

                    b.HasIndex("Nome", "Esporte")
                        .IsUnique();

                    b.ToTable("Ligas");
                });

            modelBuilder.Entity("LBAChamps.Models.Partida", b =>
                {
                    b.Property<int>("IdPartida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPartida"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdLiga")
                        .HasColumnType("int");

                    b.Property<int>("IdTimeCasa")
                        .HasColumnType("int");

                    b.Property<int>("IdTimeFora")
                        .HasColumnType("int");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<int>("PlacarCasa")
                        .HasColumnType("int");

                    b.Property<int>("PlacarFora")
                        .HasColumnType("int");

                    b.HasKey("IdPartida");

                    b.HasIndex("IdLiga");

                    b.HasIndex("IdTimeCasa");

                    b.HasIndex("IdTimeFora");

                    b.ToTable("Partidas", t =>
                        {
                            t.HasCheckConstraint("CK_Partida_TimesDiferentes", "[IdTimeCasa] <> [IdTimeFora]");
                        });
                });

            modelBuilder.Entity("LBAChamps.Models.Time", b =>
                {
                    b.Property<int>("IdTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTime"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<int>("IdLiga")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("IdTime");

                    b.HasIndex("IdLiga");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("LBAChamps.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("LBAChamps.Models.EstatisticasPartida", b =>
                {
                    b.HasOne("LBAChamps.Models.Jogador", "Jogador")
                        .WithMany("Estatisticas")
                        .HasForeignKey("IdJogador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBAChamps.Models.Partida", "Partida")
                        .WithMany("Estatisticas")
                        .HasForeignKey("IdPartida")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogador");

                    b.Navigation("Partida");
                });

            modelBuilder.Entity("LBAChamps.Models.Jogador", b =>
                {
                    b.HasOne("LBAChamps.Models.Time", "Time")
                        .WithMany("Jogadores")
                        .HasForeignKey("IdTime")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Time");
                });

            modelBuilder.Entity("LBAChamps.Models.Partida", b =>
                {
                    b.HasOne("LBAChamps.Models.Liga", "Liga")
                        .WithMany("Partidas")
                        .HasForeignKey("IdLiga")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBAChamps.Models.Time", "TimeCasa")
                        .WithMany("PartidasCasa")
                        .HasForeignKey("IdTimeCasa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LBAChamps.Models.Time", "TimeFora")
                        .WithMany("PartidasFora")
                        .HasForeignKey("IdTimeFora")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Liga");

                    b.Navigation("TimeCasa");

                    b.Navigation("TimeFora");
                });

            modelBuilder.Entity("LBAChamps.Models.Time", b =>
                {
                    b.HasOne("LBAChamps.Models.Liga", "Liga")
                        .WithMany("Times")
                        .HasForeignKey("IdLiga")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Liga");
                });

            modelBuilder.Entity("LBAChamps.Models.Jogador", b =>
                {
                    b.Navigation("Estatisticas");
                });

            modelBuilder.Entity("LBAChamps.Models.Liga", b =>
                {
                    b.Navigation("Partidas");

                    b.Navigation("Times");
                });

            modelBuilder.Entity("LBAChamps.Models.Partida", b =>
                {
                    b.Navigation("Estatisticas");
                });

            modelBuilder.Entity("LBAChamps.Models.Time", b =>
                {
                    b.Navigation("Jogadores");

                    b.Navigation("PartidasCasa");

                    b.Navigation("PartidasFora");
                });
#pragma warning restore 612, 618
        }
    }
}
